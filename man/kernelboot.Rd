% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kernelboot.R
\name{kernelboot}
\alias{kernelboot}
\title{Smoothed bootstrap}
\usage{
kernelboot(data, statistic, R = 500L, bw = "default",
  kernel = c("gaussian", "epanechnikov", "rectangular", "triangular",
  "biweight", "triweight", "cosine", "optcosine"), weights = NULL, ...,
  adjust = 1, preserve.var = TRUE, ignore = NULL, parallel = FALSE,
  mc.cores = getOption("mc.cores", 2L))
}
\arguments{
\item{data}{vector, matrix, or data.frame. For non-numeric values standard bootstrap
is applied (see below).}

\item{statistic}{a function that is applied to the \code{data}. The first argument of
the function will always be the original data. Any further arguments
can be passed to \code{statistic} through \dots argument.}

\item{R}{the number of bootstrap replicates.}

\item{bw}{the smoothing bandwidth to be used (see \code{\link[stats]{density}}).
The kernels are scaled such that this is the standard deviation,
or covariance matrix of the smoothing kernel. By default
\code{\link[stats]{bw.nrd0}} is used for univariate data,
and \code{\link{bw.silv}} is used for multivariate data.}

\item{kernel}{a character string giving the smoothing kernel to be used.
This must partially match one of "gaussian", "rectangular",
"triangular", "epanechnikov", "biweight", "cosine" or
"optcosine", with default "gaussian", and may be abbreviated.}

\item{weights}{vector of importance weights. It should have as many elements
as there are observations in \code{data}. It defaults to uniform
weights.}

\item{\dots}{optional arguments to to \code{statistic}.}

\item{adjust}{scalar; the bandwidth used is actually \code{adjust*bw}. This makes
it easy to specify values like 'half the default' bandwidth.}

\item{preserve.var}{logical; if \code{TRUE} random generation algorithm preserves
mean and variance of the original sample (see
\code{\link{ruvk}} for details). This parameter is used only for univariate
kernels.}

\item{ignore}{vector of names of columns to be ignored during the smoothing phase of
bootstrap procedure (their values are not altered using random noise).}

\item{parallel}{if \code{TRUE} uses parallel processing (see \code{\link[parallel]{mclapply}}).}

\item{mc.cores}{number of cores used for parallel computing (see \code{\link[parallel]{mclapply}}).}
}
\value{
An object of class \code{"kernelboot"}, i.e., a list with components including

\tabular{ll}{
\code{orig.stat}    \tab  estimates from \code{statistic} on the original data, \cr
\code{boot.sample}  \tab  samples drawn, \cr
\code{call}         \tab  function call, \cr
\code{statistic}    \tab  actual \code{statistic} function that was used, \cr
\code{param}        \tab  list of parameters that were used. \cr
}

\code{param} section contains:

\tabular{ll}{
\code{R}            \tab  number of bootstrap iterations, \cr
\code{bw}           \tab  the bandwidth that was used, \cr
\code{weights}      \tab  vector of the weights that were applied, \cr
\code{kernel}       \tab  name of the kernel that was used, \cr
\code{preserve.var} \tab  logical; value of \code{preserve.var} parameter, \cr
\code{parallel}     \tab  logical; states if parallel computation was used.
}
}
\description{
Smoothed bootstrap is an extension of standard bootstrap using kernel densities.
}
\details{
\emph{Smoothed bootstrap} (Efron, 1981; Silverman, 1986) is an extension of standard bootstrap
procedure, where instead of drawing samples with replacement from the empirical distribution,
they are drawn from kernel density estimate of the distribution.

For smoothed bootstrap, points (in univariate case), or rows (in multivariate case), are drawn with
replacement, to obtain samples of size \eqn{n} from the initial dataset of size \eqn{n}, as with
standard bootstrap. Next, random noise from kernel density \eqn{K} is added to each of the drawn
values. The proceure is repeated \eqn{R} times and \code{statistic} is evaluated on each of the
samples.

The noise is added \emph{only} to the numeric columns, while non-numeric columns (i.e.
\code{character}, \code{factor}, \code{logical}) are not altered. What follows, to the
non-numeric columns and columns listed in \code{ignore} standard bootstrap procedure
is applied.

With multivariate data, when using \code{kernel = "gaussian"} and \code{bw} is a non-diagonal
matrix, multivariate Gaussian kernel is applied (see \code{\link{rmvn}} and \code{\link{rmvk}}).
When \code{kernel = "gaussian"} and \code{bw} is a diagonal matrix, or a vector, product kernel
is used (see \code{\link{rmvpk}}). In other cases, depending on the data, univariate, or product
kernels, are used.
}
\examples{

kernelboot(mtcars, function(data) coef(lm(mpg ~., data = data)) , R = 250)
kernelboot(mtcars, function(data) median(data$mpg) , R = 250)


}
\references{
Silverman, B. W. (1986). Density estimation for statistics and data analysis.
Chapman and Hall/CRC.

Wand, M. P. and Jones, M. C. (1995). Kernel Smoothing. Chapman and Hall/CRC.

Scott, D. W. (1992). Multivariate density estimation: theory, practice,
and visualization. John Wiley & Sons.

Efron, B. (1981). Nonparametric estimates of standard error: the jackknife,
the bootstrap and other methods. Biometrika, 589-599.
}
\seealso{
\code{\link{bandwidth}}, \code{\link[stats]{density}},
         \code{\link[stats]{bandwidth}}, \code{\link{dmvn}},
         \code{\link{duvk}}, \code{\link{dmvk}}, \code{\link{dmvpk}}
}
