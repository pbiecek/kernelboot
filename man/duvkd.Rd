% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/univar-kd.R
\name{duvkd}
\alias{duvkd}
\alias{ruvkd}
\title{Univariate kernel density}
\usage{
duvkd(x, y, bw = bw.nrd0(y), weights = NULL, kernel = c("gaussian",
  "epanechnikov", "rectangular", "triangular", "biweight", "triweight",
  "cosine", "optcosine"), adjust = 1, log.prob = FALSE)

ruvkd(n, y, bw = bw.nrd0(y), weights = NULL, kernel = c("gaussian",
  "epanechnikov", "rectangular", "triangular", "biweight", "triweight",
  "cosine", "optcosine"), adjust = 1, preserve.var = FALSE)
}
\arguments{
\item{x}{numeric vector of length \eqn{k}; kernel density is
evaluated on those values.}

\item{y}{numeric vector of length \eqn{n}; kernel density is
evaluated on those values.}

\item{bw}{scalar; must be greater than zero.}

\item{weights}{numeric vector of length \eqn{n}; must be non-negative.}

\item{kernel}{a character string giving the smoothing kernel to be used.
This must partially match one of "gaussian", "rectangular",
"triangular", "epanechnikov", "biweight", "cosine" or
"optcosine", with default "gaussian", and may be abbreviated
to a unique prefix (single letter).}

\item{adjust}{scalar; the bandwidth used is actually \code{adjust*bw}.
This makes it easy to specify values like 'half the default'
bandwidth.}

\item{log.prob}{logical; if \code{TRUE}, probabilities p are given as log(p).}

\item{n}{number of observations. If length(n) > 1,
the length is taken to be the number required.}

\item{preserve.var}{logical; if \code{TRUE} random generation algorithm preserves
mean and variance of the original sample (see
\code{\link{kernelboot}} for details).}
}
\description{
Univariate kernel density
}
\details{
Univariate kernel density estimator is defined as

\deqn{
\hat{f_h}(x) = \sum_{i=1}^n w_i \, K_h\left(\frac{x-y_i}{h}\right)
}{
f(x) = sum[i](w[i] * Kh((x-y[i])/h))
}

where \eqn{w} is a vector of weights such that \eqn{\sum_i w_i = 1}{sum(w) = 1}
(by default \eqn{w_i=1/n}{w[i]=1/n} for all \eqn{i}), \eqn{K_h = K(x/h)/h}{Kh = K(x/h)/h} is
kernel \eqn{K} parametrized by bandwidth \eqn{h} and \eqn{y} is a vector of
data points used for estimating the kernel density.
}
\examples{

hist(ruvkd(1e5, mtcars$mpg), 100, freq = FALSE)
curve(duvkd(x, mtcars$mpg), from = 0, to = 50, col = "red", add = TRUE)

hist(ruvkd(1e5, mtcars$mpg, preserve.var = TRUE), 100, freq = FALSE)
curve(duvkd(x, mtcars$mpg), from = 0, to = 50, col = "red", add = TRUE)


}
\references{
Silverman, B. W. (1986). Density estimation for statistics and data analysis.
Chapman and Hall/CRC.

Wand, M. P. and Jones, M. C. (1995). Kernel Smoothing. Chapman and Hall/CRC.

Scott, D. W. (1992). Multivariate density estimation: theory, practice,
and visualization. John Wiley & Sons.
}
\seealso{
\code{\link[stats]{density}}, \code{\link{kernelboot}}
}
